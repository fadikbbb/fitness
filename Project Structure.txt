fitness-management-app/
│
├── controllers/
│   ├── authController.js          # Handles authentication logic (login, registration, etc.)
│   ├── nutritionPlanController.js # Manages CRUD operations for nutrition plans
│   ├── userController.js          # Manages user data and profiles
│   ├── workoutController.js       # Manages CRUD operations for workout plans
│   ├── adminController.js         # Handles admin-specific operations (e.g., user management)
│   ├── commentController.js       # Manages user comments or feedback
│   ├── foodController.js          # Manages food items and categories
│   └── subscriptionController.js  # Manages user subscriptions
│
├── middleware/
│   ├── authenticate.js            # Authentication middleware
│   ├── authorize.js               # Authorization middleware
│   ├── validation.js              # Validation middleware
│   ├── query.js                   # Query parsing, filtering, sorting, and pagination
│   ├── logger.js                  # Request and response logging
│   ├── rateLimiter.js             # Rate limiting for API requests
│   └── errorHandler.js            # Global error handling
│
├── models/
│   ├── UserModel.js               # Mongoose schema and model for reqular and admin and preiumum users
│   ├── NutritionPlanModel.js      # Mongoose schema and model for nutrition plans
│   ├── WorkoutPlanModel.js        # Mongoose schema and model for workout plans
│   ├── CommentModel.js            # Mongoose schema and model for user comments
│   ├── FoodModel.js               # Mongoose schema and model for food items
│   └── SubscriptionModel.js       # Mongoose schema and model for user subscriptions
|   |__ MealModel
│   |__ ExerciseModel
|
├── routes/
│   ├── authRouter.js              # Routes for authentication (login, registration, etc.)
│   ├── nutritionPlanRouter.js     # Routes for managing nutrition plans
│   ├── userRouter.js              # Routes for managing user data
│   ├── workoutRouter.js           # Routes for managing workout plans
│   ├── adminRouter.js             # Admin-specific routes (e.g., managing users)
│   ├── commentRouter.js           # Routes for managing user comments or feedback
│   ├── foodRouter.js              # Routes for managing food items and categories
│   └── subscriptionRouter.js      # Routes for managing user subscriptions
│
├── utils/
│   ├── tokenUtils.js              # Functions for generating and verifying JWT tokens
│   ├── emailUtils.js              # Functions for sending and handling emails (e.g., password resets)
│   └── passwordUtils.js           # Functions for hashing and comparing passwords
│
├── app.js                        # Main application entry point
├── package.json                  # Project dependencies and scripts
└── README.md                     # Project documentation
